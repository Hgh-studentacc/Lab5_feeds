}
url[sapply(url, is.null)] <- NULL
resp_test=lapply(url,httr::GET)
data_cont=lapply(resp_test,httr::content)
##Here we create a big list out of values in data_cont(and its sub_list)
list_adder=function(n){
return(data_cont[[n]]$values)
}
list_extract=function(n,m){
dot=my_data[[n]][[m]][1:3]
dot=append(dot,my_data[[n]][[m]][[4]][[1]][4])
return(dot)
}
## after making the big list we create sub list out of that for preparation
#of dataframe
my_data=(lapply(1:length(data_cont),list_adder))  #list of raw data
##following function creates final list
f_list=list()
for (i in 1:length(my_data)){
for (j in 1:160){
f_list=append(f_list,list(list_extract(i,j)))
}
}
return(f_list)
}
#' @export
#plot all functions using corresponding names
plotfunction_ind=function(){
# library(httr)
# library(shiny)
# library(readxl)
# library(ggplot2)
url1="https://raw.githubusercontent.com/muhis097/Lab5/main/data/List_kommun.xlsx"
url2="https://raw.githubusercontent.com/muhis097/Lab5/main/data/factors.xlsx"
httr::GET(url1, httr::write_disk(tfile1 <- tempfile(fileext = ".xlsx")))
httr:GET(url2, httr::write_disk(tfiles <- tempfile(fileext = ".xlsx")))
List_kommun = readxl::read_excel(tfile1,col_types = "text")
List_factors = readxl::read_excel(tfiles,col_types = "text",col_names=FALSE)
outlist=KoladaAPI()
da=matrix(outlist[[1]],ncol=4)
colnames(da)=names(outlist[[1]])
for (i in 2:length(outlist)){da=rbind(da,(outlist[[i]]))}
da=as.data.frame(da)
ui <- shiny::fluidPage(checkboxGroupInput(inputId="factors", label="Choose economic factor variable", choices = NULL,
inline = FALSE, width = NULL, choiceNames = List_factors[[2]],
choiceValues = List_factors[[1]]),
checkboxGroupInput(inputId="Municipalities", label="Choose city variable", choices = NULL,
inline = FALSE, width = NULL, choiceNames = List_kommun$Kommun[c(29,122,236,253,27,152,130,252,200,33,262,126)-1],
choiceValues = List_kommun$Kod[c(29,122,236,253,27,152,130,252,200,33,262,126)-1]),
plotOutput("densPlot"))
server <- function(input, output) {
output$densPlot <- renderPlot({
first_filter=da[da[["kpi"]]==input$factors,]
second_filter=first_filter[first_filter[["municipality"]]==input$Municipalities,]
mufflin=ggplot2::ggplot(data=second_filter,aes(x=unlist(.data$period),y=unlist(.data[["value"]])))+
geom_point()+
geom_line()+
xlab("period")+
ylab(paste(List_factors[[2]][List_factors[[1]]==input$factors]))
print(mufflin)
#print(input$Municipalities)
print(first_filter)
print(second_filter)
})
}
shiny::shinyApp(ui = ui, server = server)
}
# Run the application
plotfunction_ind()
#' @export
KoladaAPI=function(){
#rm(list=ls())
library(httr)
library(readxl)
#library(jsonlite) #just for test comments
url1="https://raw.githubusercontent.com/muhis097/Lab5/main/data/List_kommun.xlsx"
GET(url1, write_disk(tfile1 <- tempfile(fileext = ".xlsx")))
List_kommun = read_excel(tfile1,col_types = "text")
rich=c(28,121,235,252,26,151,129,251,199,32,261,125)
richnames=List_kommun$Kommun[c(29,122,236,253,27,152,130,252,200,33,262,126)-1]
richcode=List_kommun$Kod[c(29,122,236,253,27,152,130,252,200,33,262,126)-1]
url=list()
for (i in rich){
url[[i]] =gsub("[\r\n]", "", paste("http://api.kolada.se/v2/data/kpi/N03101,N03006,N03105,N03120,N03104,N03132,N03100,N03048,N03001,N03003,N03103,N03016,N03016,N03106,N03144,N03079,N03102/municipality/",List_kommun$Kod[i],"/year/2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,
2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021",sep = ""))
}
url[sapply(url, is.null)] <- NULL
resp_test=lapply(url,GET)
data_cont=lapply(resp_test,content)
##Here we create a big list out of values in data_cont(and its sub_list)
list_adder=function(n){
return(data_cont[[n]]$values)
}
list_extract=function(n,m){
dot=my_data[[n]][[m]][1:3]
dot=append(dot,my_data[[n]][[m]][[4]][[1]][4])
return(dot)
}
## after making the big list we create sub list out of that for preparation
#of dataframe
my_data=(lapply(1:length(data_cont),list_adder))  #list of raw data
##following function creates final list
f_list=list()
for (i in 1:length(my_data)){
for (j in 1:160){
f_list=append(f_list,list(list_extract(i,j)))
}
}
return(f_list)
}
#' @export
#plot all functions using corresponding names
plotfunction_ind=function(){
library(httr)
library(shiny)
library(readxl)
library(ggplot2)
url1="https://raw.githubusercontent.com/muhis097/Lab5/main/data/List_kommun.xlsx"
url2="https://raw.githubusercontent.com/muhis097/Lab5/main/data/factors.xlsx"
GET(url1, write_disk(tfile1 <- tempfile(fileext = ".xlsx")))
GET(url2, write_disk(tfiles <- tempfile(fileext = ".xlsx")))
List_kommun = read_excel(tfile1,col_types = "text")
List_factors = read_excel(tfiles,col_types = "text",col_names=FALSE)
outlist=KoladaAPI()
da=matrix(outlist[[1]],ncol=4)
colnames(da)=names(outlist[[1]])
for (i in 2:length(outlist)){da=rbind(da,(outlist[[i]]))}
da=as.data.frame(da)
ui <- fluidPage(checkboxGroupInput(inputId="factors", label="Choose economic factor variable", choices = NULL,
inline = FALSE, width = NULL, choiceNames = List_factors[[2]],
choiceValues = List_factors[[1]]),
checkboxGroupInput(inputId="Municipalities", label="Choose city variable", choices = NULL,
inline = FALSE, width = NULL, choiceNames = List_kommun$Kommun[c(29,122,236,253,27,152,130,252,200,33,262,126)-1],
choiceValues = List_kommun$Kod[c(29,122,236,253,27,152,130,252,200,33,262,126)-1]),
plotOutput("densPlot"))
server <- function(input, output) {
output$densPlot <- renderPlot({
first_filter=da[da[["kpi"]]==input$factors,]
second_filter=first_filter[first_filter[["municipality"]]==input$Municipalities,]
mufflin=ggplot(data=second_filter,aes(x=unlist(.data$period),y=unlist(.data[["value"]])))+
geom_point()+
geom_line()+
xlab("period")+
ylab(paste(List_factors[[2]][List_factors[[1]]==input$factors]))
print(mufflin)
#print(input$Municipalities)
print(first_filter)
print(second_filter)
})
}
shinyApp(ui = ui, server = server)
}
# Run the application
devtools::document()
warnings()
library(devtools)
use_testthat()
usethis::use_github_action_check_standard()
#' @export
KoladaAPI=function(){
#rm(list=ls())
library(httr)
library(readxl)
#library(jsonlite) #just for test comments
url1="https://raw.githubusercontent.com/Hgh-studentacc/projecttester/main/List_kommun.xlsx?token=GHSAT0AAAAAABYVFVZVI5L3EVLODMKIV5WOYZXL4BQ"
GET(url1, write_disk(tfile1 <- tempfile(fileext = ".xlsx")))
List_kommun = read_excel(tfile1,col_types = "text")
rich=c(28,121,235,252,26,151,129,251,199,32,261,125)
richnames=List_kommun$Kommun[c(29,122,236,253,27,152,130,252,200,33,262,126)-1]
richcode=List_kommun$Kod[c(29,122,236,253,27,152,130,252,200,33,262,126)-1]
url=list()
for (i in rich){
url[[i]] =gsub("[\r\n]", "", paste("http://api.kolada.se/v2/data/kpi/N03101,N03006,N03105,N03120,N03104,N03132,N03100,N03048,N03001,N03003,N03103,N03016,N03016,N03106,N03144,N03079,N03102/municipality/",List_kommun$Kod[i],"/year/2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,
2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021",sep = ""))
}
url[sapply(url, is.null)] <- NULL
resp_test=lapply(url,GET)
data_cont=lapply(resp_test,content)
##Here we create a big list out of values in data_cont(and its sub_list)
list_adder=function(n){
return(data_cont[[n]]$values)
}
list_extract=function(n,m){
dot=my_data[[n]][[m]][1:3]
dot=append(dot,my_data[[n]][[m]][[4]][[1]][4])
return(dot)
}
## after making the big list we create sub list out of that for preparation
#of dataframe
my_data=(lapply(1:length(data_cont),list_adder))  #list of raw data
##following function creates final list
f_list=list()
for (i in 1:length(my_data)){
for (j in 1:160){
f_list=append(f_list,list(list_extract(i,j)))
}
}
return(f_list)
}
#' @export
#plot all functions using corresponding names
plotfunction_ind=function(){
library(httr)
library(shiny)
library(readxl)
library(ggplot2)
url1="https://raw.githubusercontent.com/Hgh-studentacc/projecttester/main/List_kommun.xlsx?token=GHSAT0AAAAAABYVFVZVI5L3EVLODMKIV5WOYZXL4BQ"
url2="https://raw.githubusercontent.com/Hgh-studentacc/projecttester/main/factors.xlsx?token=GHSAT0AAAAAABYVFVZUEQULPUZCQ24MBHLGYZXL5OA"
GET(url1, write_disk(tfile1 <- tempfile(fileext = ".xlsx")))
GET(url2, write_disk(tfiles <- tempfile(fileext = ".xlsx")))
List_kommun = read_excel(tfile1,col_types = "text")
List_factors = read_excel(tfiles,col_types = "text",col_names=FALSE)
outlist=KoladaAPI()
da=matrix(outlist[[1]],ncol=4)
colnames(da)=names(outlist[[1]])
for (i in 2:length(outlist)){da=rbind(da,(outlist[[i]]))}
da=as.data.frame(da)
ui <- fluidPage(checkboxGroupInput(inputId="factors", label="Choose economic factor variable", choices = NULL,
inline = FALSE, width = NULL, choiceNames = List_factors[[2]],
choiceValues = List_factors[[1]]),
checkboxGroupInput(inputId="Municipalities", label="Choose city variable", choices = NULL,
inline = FALSE, width = NULL, choiceNames = List_kommun$Kommun[c(29,122,236,253,27,152,130,252,200,33,262,126)-1],
choiceValues = List_kommun$Kod[c(29,122,236,253,27,152,130,252,200,33,262,126)-1]),
plotOutput("densPlot"))
server <- function(input, output) {
output$densPlot <- renderPlot({
first_filter=da[da[["kpi"]]==input$factors,]
second_filter=first_filter[first_filter[["municipality"]]==input$Municipalities,]
mufflin=ggplot(data=second_filter,aes(x=unlist(.data$period),y=unlist(.data[["value"]])))+
geom_point()+
geom_line()+
xlab("period")+
ylab(paste(List_factors[[2]][List_factors[[1]]==input$factors]))
print(mufflin)
#print(input$Municipalities)
print(first_filter)
print(second_filter)
})
}
shinyApp(ui = ui, server = server)
}
# Run the application
plotfunction_ind()
#' @export
KoladaAPI=function(){
#rm(list=ls())
library(httr)
library(readxl)
#library(jsonlite) #just for test comments
url1="https://github.com/Hgh-studentacc/projecttester/blob/7c005a42bbabb3c9f6bae4a4afd07111141e954a/List_kommun.xlsx"
GET(url1, write_disk(tfile1 <- tempfile(fileext = ".xlsx")))
List_kommun = read_excel(tfile1,col_types = "text")
rich=c(28,121,235,252,26,151,129,251,199,32,261,125)
richnames=List_kommun$Kommun[c(29,122,236,253,27,152,130,252,200,33,262,126)-1]
richcode=List_kommun$Kod[c(29,122,236,253,27,152,130,252,200,33,262,126)-1]
url=list()
for (i in rich){
url[[i]] =gsub("[\r\n]", "", paste("http://api.kolada.se/v2/data/kpi/N03101,N03006,N03105,N03120,N03104,N03132,N03100,N03048,N03001,N03003,N03103,N03016,N03016,N03106,N03144,N03079,N03102/municipality/",List_kommun$Kod[i],"/year/2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,
2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021",sep = ""))
}
url[sapply(url, is.null)] <- NULL
resp_test=lapply(url,GET)
data_cont=lapply(resp_test,content)
##Here we create a big list out of values in data_cont(and its sub_list)
list_adder=function(n){
return(data_cont[[n]]$values)
}
list_extract=function(n,m){
dot=my_data[[n]][[m]][1:3]
dot=append(dot,my_data[[n]][[m]][[4]][[1]][4])
return(dot)
}
## after making the big list we create sub list out of that for preparation
#of dataframe
my_data=(lapply(1:length(data_cont),list_adder))  #list of raw data
##following function creates final list
f_list=list()
for (i in 1:length(my_data)){
for (j in 1:160){
f_list=append(f_list,list(list_extract(i,j)))
}
}
return(f_list)
}
#' @export
#plot all functions using corresponding names
plotfunction_ind=function(){
library(httr)
library(shiny)
library(readxl)
library(ggplot2)
url1="https://github.com/Hgh-studentacc/projecttester/blob/7c005a42bbabb3c9f6bae4a4afd07111141e954a/List_kommun.xlsx"
url2="https://github.com/Hgh-studentacc/projecttester/blob/948f5ea92ce72d65616485cf8fed98d62cde26e5/factors.xlsx"
GET(url1, write_disk(tfile1 <- tempfile(fileext = ".xlsx")))
GET(url2, write_disk(tfiles <- tempfile(fileext = ".xlsx")))
List_kommun = read_excel(tfile1,col_types = "text")
List_factors = read_excel(tfiles,col_types = "text",col_names=FALSE)
outlist=KoladaAPI()
da=matrix(outlist[[1]],ncol=4)
colnames(da)=names(outlist[[1]])
for (i in 2:length(outlist)){da=rbind(da,(outlist[[i]]))}
da=as.data.frame(da)
ui <- fluidPage(checkboxGroupInput(inputId="factors", label="Choose economic factor variable", choices = NULL,
inline = FALSE, width = NULL, choiceNames = List_factors[[2]],
choiceValues = List_factors[[1]]),
checkboxGroupInput(inputId="Municipalities", label="Choose city variable", choices = NULL,
inline = FALSE, width = NULL, choiceNames = List_kommun$Kommun[c(29,122,236,253,27,152,130,252,200,33,262,126)-1],
choiceValues = List_kommun$Kod[c(29,122,236,253,27,152,130,252,200,33,262,126)-1]),
plotOutput("densPlot"))
server <- function(input, output) {
output$densPlot <- renderPlot({
first_filter=da[da[["kpi"]]==input$factors,]
second_filter=first_filter[first_filter[["municipality"]]==input$Municipalities,]
mufflin=ggplot(data=second_filter,aes(x=unlist(.data$period),y=unlist(.data[["value"]])))+
geom_point()+
geom_line()+
xlab("period")+
ylab(paste(List_factors[[2]][List_factors[[1]]==input$factors]))
print(mufflin)
#print(input$Municipalities)
print(first_filter)
print(second_filter)
})
}
shinyApp(ui = ui, server = server)
}
# Run the application
plotfunction_ind()
#' @export
KoladaAPI=function(){
#rm(list=ls())
library(httr)
library(readxl)
#library(jsonlite) #just for test comments
url1="https://github.com/Hgh-studentacc/personal_uploads/raw/main/List_kommun.xlsx"
GET(url1, write_disk(tfile1 <- tempfile(fileext = ".xlsx")))
List_kommun = read_excel(tfile1,col_types = "text")
rich=c(28,121,235,252,26,151,129,251,199,32,261,125)
richnames=List_kommun$Kommun[c(29,122,236,253,27,152,130,252,200,33,262,126)-1]
richcode=List_kommun$Kod[c(29,122,236,253,27,152,130,252,200,33,262,126)-1]
url=list()
for (i in rich){
url[[i]] =gsub("[\r\n]", "", paste("http://api.kolada.se/v2/data/kpi/N03101,N03006,N03105,N03120,N03104,N03132,N03100,N03048,N03001,N03003,N03103,N03016,N03016,N03106,N03144,N03079,N03102/municipality/",List_kommun$Kod[i],"/year/2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,
2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021",sep = ""))
}
url[sapply(url, is.null)] <- NULL
resp_test=lapply(url,GET)
data_cont=lapply(resp_test,content)
##Here we create a big list out of values in data_cont(and its sub_list)
list_adder=function(n){
return(data_cont[[n]]$values)
}
list_extract=function(n,m){
dot=my_data[[n]][[m]][1:3]
dot=append(dot,my_data[[n]][[m]][[4]][[1]][4])
return(dot)
}
## after making the big list we create sub list out of that for preparation
#of dataframe
my_data=(lapply(1:length(data_cont),list_adder))  #list of raw data
##following function creates final list
f_list=list()
for (i in 1:length(my_data)){
for (j in 1:160){
f_list=append(f_list,list(list_extract(i,j)))
}
}
return(f_list)
}
#' @export
#plot all functions using corresponding names
plotfunction_ind=function(){
library(httr)
library(shiny)
library(readxl)
library(ggplot2)
url1="https://github.com/Hgh-studentacc/personal_uploads/raw/main/List_kommun.xlsx"
url2="https://github.com/Hgh-studentacc/personal_uploads/raw/main/factors.xlsx"
GET(url1, write_disk(tfile1 <- tempfile(fileext = ".xlsx")))
GET(url2, write_disk(tfiles <- tempfile(fileext = ".xlsx")))
List_kommun = read_excel(tfile1,col_types = "text")
List_factors = read_excel(tfiles,col_types = "text",col_names=FALSE)
outlist=KoladaAPI()
da=matrix(outlist[[1]],ncol=4)
colnames(da)=names(outlist[[1]])
for (i in 2:length(outlist)){da=rbind(da,(outlist[[i]]))}
da=as.data.frame(da)
ui <- fluidPage(checkboxGroupInput(inputId="factors", label="Choose economic factor variable", choices = NULL,
inline = FALSE, width = NULL, choiceNames = List_factors[[2]],
choiceValues = List_factors[[1]]),
checkboxGroupInput(inputId="Municipalities", label="Choose city variable", choices = NULL,
inline = FALSE, width = NULL, choiceNames = List_kommun$Kommun[c(29,122,236,253,27,152,130,252,200,33,262,126)-1],
choiceValues = List_kommun$Kod[c(29,122,236,253,27,152,130,252,200,33,262,126)-1]),
plotOutput("densPlot"))
server <- function(input, output) {
output$densPlot <- renderPlot({
first_filter=da[da[["kpi"]]==input$factors,]
second_filter=first_filter[first_filter[["municipality"]]==input$Municipalities,]
mufflin=ggplot(data=second_filter,aes(x=unlist(.data$period),y=unlist(.data[["value"]])))+
geom_point()+
geom_line()+
xlab("period")+
ylab(paste(List_factors[[2]][List_factors[[1]]==input$factors]))
print(mufflin)
#print(input$Municipalities)
print(first_filter)
print(second_filter)
})
}
shinyApp(ui = ui, server = server)
}
# Run the application
plotfunction_ind()
devtools::document()
devtools::document()
#' KoladaAPI Main function
#' @author Hirbod & Muhaiminul
#' @field noinput
#' @import readxl
#' @import httr
#' @export KoladaAPI
KoladaAPI=function(){
#rm(list=ls())
library(httr)
library(readxl)
#library(jsonlite) #just for test comments
url1="https://github.com/Hgh-studentacc/personal_uploads/raw/main/List_kommun.xlsx"
GET(url1, write_disk(tfile1 <- tempfile(fileext = ".xlsx")))
List_kommun = read_excel(tfile1,col_types = "text")
rich=c(28,121,235,252,26,151,129,251,199,32,261,125)
richnames=List_kommun$Kommun[c(29,122,236,253,27,152,130,252,200,33,262,126)-1]
richcode=List_kommun$Kod[c(29,122,236,253,27,152,130,252,200,33,262,126)-1]
url=list()
for (i in rich){
url[[i]] =gsub("[\r\n]", "", paste("http://api.kolada.se/v2/data/kpi/N03101,N03006,N03105,N03120,N03104,N03132,N03100,N03048,N03001,N03003,N03103,N03016,N03016,N03106,N03144,N03079,N03102/municipality/",List_kommun$Kod[i],"/year/2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,
2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021",sep = ""))
}
url[sapply(url, is.null)] <- NULL
resp_test=lapply(url,GET)
data_cont=lapply(resp_test,content)
##Here we create a big list out of values in data_cont(and its sub_list)
list_adder=function(n){
return(data_cont[[n]]$values)
}
list_extract=function(n,m){
dot=my_data[[n]][[m]][1:3]
dot=append(dot,my_data[[n]][[m]][[4]][[1]][4])
return(dot)
}
## after making the big list we create sub list out of that for preparation
#of dataframe
my_data=(lapply(1:length(data_cont),list_adder))  #list of raw data
##following function creates final list
f_list=list()
for (i in 1:length(my_data)){
for (j in 1:160){
f_list=append(f_list,list(list_extract(i,j)))
}
}
return(f_list)
}
#' Shinyapp based on KoladaAPI
#' @author Hirbod & Muhaiminul
#' @field noinput
#' @import readxl
#' @import httr
#' @import ggplot2
#' @import shiny
#' @export plotfunction_ind
#plot all functions using corresponding names
plotfunction_ind=function(){
library(httr)
library(shiny)
library(readxl)
library(ggplot2)
url1="https://github.com/Hgh-studentacc/personal_uploads/raw/main/List_kommun.xlsx"
url2="https://github.com/Hgh-studentacc/personal_uploads/raw/main/factors.xlsx"
GET(url1, write_disk(tfile1 <- tempfile(fileext = ".xlsx")))
GET(url2, write_disk(tfiles <- tempfile(fileext = ".xlsx")))
List_kommun = read_excel(tfile1,col_types = "text")
List_factors = read_excel(tfiles,col_types = "text",col_names=FALSE)
outlist=KoladaAPI()
da=matrix(outlist[[1]],ncol=4)
colnames(da)=names(outlist[[1]])
for (i in 2:length(outlist)){da=rbind(da,(outlist[[i]]))}
da=as.data.frame(da)
ui <- fluidPage(checkboxGroupInput(inputId="factors", label="Choose economic factor variable", choices = NULL,
inline = FALSE, width = NULL, choiceNames = List_factors[[2]],
choiceValues = List_factors[[1]]),
checkboxGroupInput(inputId="Municipalities", label="Choose city variable", choices = NULL,
inline = FALSE, width = NULL, choiceNames = List_kommun$Kommun[c(29,122,236,253,27,152,130,252,200,33,262,126)-1],
choiceValues = List_kommun$Kod[c(29,122,236,253,27,152,130,252,200,33,262,126)-1]),
plotOutput("densPlot"))
server <- function(input, output) {
output$densPlot <- renderPlot({
first_filter=da[da[["kpi"]]==input$factors,]
second_filter=first_filter[first_filter[["municipality"]]==input$Municipalities,]
mufflin=ggplot(data=second_filter,aes(x=unlist(.data$period),y=unlist(.data[["value"]])))+
geom_point()+
geom_line()+
xlab("period")+
ylab(paste(List_factors[[2]][List_factors[[1]]==input$factors]))
print(mufflin)
#print(input$Municipalities)
print(first_filter)
print(second_filter)
})
}
shinyApp(ui = ui, server = server)
}
# Run the application
plotfunction_ind()
